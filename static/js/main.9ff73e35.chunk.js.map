{"version":3,"sources":["images/like.svg","images/logo.png","images/unlike.svg","images/garbage.svg","images/something-went-wrong.png","app/partials/Header.js","shared/constants.js","entities/Character.js","entities/CharacterDetails.js","services/dataService.js","app/mainPage/CardView.js","app/partials/Loading.js","app/mainPage/BookmarkItem.js","app/mainPage/Bookmark.js","app/partials/SomethingWentWrong.js","app/mainPage/MainPage.js","app/characterPage/CharacterPage.js","app/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","react_router_dom","to","src","logo","alt","apiURL","Character","id","name","image","bookmarkState","Object","classCallCheck","this","species","gender","location","episode","dataService","pageNumber","pagesNumber","_this","axios","get","then","data","info","pages","results","characters","bookmarkedCharacters","getBookmarkedCharacters","map","singleCharacter","some","c","character","CharacterDetails","length","JSON","parse","localStorage","getItem","e","alert","CardView","handler","handleBookmark","icon1","onClick","icon","Loading","BookmarkItem","garbage","Bookmark","i","BookmarkItem_BookmarkItem","key","SomethingWentWrong","MainPage","possibleConstructorReturn","getPrototypeOf","call","removed","splice","push","setItem","stringify","charactersArray","state","setState","bookmarkArray","changeCurrentPage","pageNum","loadCharacters","currentPage","showLoading","error","_this2","charactersService","getCharacters","catch","_this3","SomethingWentWrong_SomethingWentWrong","Loading_Loading","Bookmark_Bookmark","CardView_CardView","build_default","totalPages","theme","React","Component","CharacterDetailsPage","getCharaterDetails","match","params","loadCharacter","AppRouter","Header_Header","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","app_AppRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ff73e35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.686d74d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.13e479f7.png\";","module.exports = __webpack_public_path__ + \"static/media/unlike.2eb430c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/garbage.67cda19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/something-went-wrong.416ec287.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../images/logo.png';\r\n\r\nexport const Header = (props) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n          <Link to=\"/\"><img src={logo} alt=\"logo\" className=\"logo\"></img></Link>\r\n        </header>\r\n    );\r\n}","export const apiURL = \"https://rickandmortyapi.com/api/character/\";","export default class Character {\r\n    constructor(id, name, image, bookmarkState) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.image = image;\r\n        this.bookmarkState = bookmarkState;\r\n    }\r\n}","export default class Character {\r\n    constructor(id, name, species, gender, location, image, episode) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.species = species;\r\n        this.gender = gender;\r\n        this.location = location;\r\n        this.image = image;\r\n        this.episode = episode;\r\n    }\r\n}","import {apiURL} from \"../shared/constants\";\r\nimport axios from \"axios\";\r\nimport Character from \"../entities/Character\";\r\nimport CharacterDetails from \"../entities/CharacterDetails\";\r\n\r\nclass CharactersService {\r\n\r\n    getCharacters(pageNumber) {\r\n        let pagesNumber;\r\n            return axios.get(apiURL + '?page=' + pageNumber)\r\n            .then(data => {  \r\n                pagesNumber = data.data.info.pages;\r\n                return data.data.results\r\n            })\r\n            .then(characters => {\r\n                let bookmarkedCharacters = this.getBookmarkedCharacters();\r\n                return {\r\n                    characters: characters.map(singleCharacter => {\r\n                    let bookmarkState = bookmarkedCharacters.some(c => singleCharacter.id === c.id);         \r\n                    return new Character(singleCharacter.id, singleCharacter.name, singleCharacter.image, bookmarkState);\r\n                    }), \r\n                    pagesNumber: pagesNumber\r\n                }\r\n            });\r\n    }\r\n\r\n    getCharaterDetails(id) {\r\n        return axios.get(apiURL + id)\r\n            .then( data => data.data)\r\n            .then( character => {\r\n                return new CharacterDetails(character.id, character.name, character.species, character.gender, character.location.name, character.image, character.episode.length)\r\n            })\r\n    }\r\n\r\n    getBookmarkedCharacters() {\r\n        let bookmarkedCharacters = [];\r\n        try {\r\n            bookmarkedCharacters = JSON.parse(localStorage.getItem(\"bookmarkedCharacters\"));\r\n            \r\n            if (bookmarkedCharacters === null) {\r\n                bookmarkedCharacters = [];\r\n            }\r\n        } catch(e) {\r\n            alert(\"Error getting bookmarked characters.\");\r\n        }\r\n        return bookmarkedCharacters;\r\n    }\r\n}\r\n\r\nexport default new CharactersService();","import React from 'react';\r\nimport icon from '../../images/unlike.svg';\r\nimport icon1 from '../../images/like.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const CardView = (props) => {\r\n\r\n    const handler =  () => {\r\n        props.handleBookmark(props.character);\r\n    }\r\n\r\n    return (\r\n            <div id={props.character.id} className=\"card\">\r\n                {!props.character.bookmarkState ? <img src={icon} onClick={handler} className=\"card__bookmark\" alt=\"bookmark\"></img> : <img src={icon1} onClick={handler} className=\"card__bookmark\" alt=\"bookmark\"></img> }\r\n\r\n                <Link to={\"/character/\" + props.character.id} >\r\n                    <img src={props.character.image} alt=\"logo\" className=\"card__img\"></img>\r\n                    <p className=\"card__name\">{props.character.name}</p>\r\n                </Link>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n\r\n    return (\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    );\r\n}","import React from 'react';\r\nimport garbage from '../../images/garbage.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const BookmarkItem = (props) => {\r\n    \r\n    const handler = () => {\r\n        props.handleBookmark(props.character);\r\n    }\r\n\r\n    return (\r\n        <div className=\"bookmark__item\">\r\n            <Link to={\"/character/\" + props.character.id} className=\"bookmark__item-content\">\r\n                <img src={props.character.image} className=\"bookmark__img\" alt={props.character.name}></img>\r\n                <p className=\"bookmark__text\">{props.character.name}</p>\r\n            </Link>\r\n                <img src={garbage} onClick={handler} className=\"bookmark__garbage\" alt=\"trash\"></img>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport icon from '../../images/like.svg';\r\nimport { BookmarkItem } from './BookmarkItem';\r\n\r\nexport const Bookmark = (props) => {\r\n\r\n    return (\r\n        <div className=\"bookmark\">\r\n            <div className=\"bookmark__container\">\r\n                <img src={icon} className=\"bookmark__icon\" alt=\"bookmark\"></img>\r\n                <p className=\"bookmark__number\">{props.characters.length}</p>\r\n                <div className=\"bookmark__box\">\r\n                    { props.characters.length === 0 ? \r\n                        <div className=\"bookmark__item\">\r\n                            <div className=\"bookmark__item-content\">\r\n                                <p className=\"bookmark__text\">No bookmarked characters</p>\r\n                            </div>\r\n                        </div> : \r\n                    props.characters.map((character, i) => {\r\n                        return <BookmarkItem character={character} handleBookmark={props.handleBookmark} key={i}></BookmarkItem>\r\n                    })}\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport image from '../../images/something-went-wrong.png';\r\n\r\nexport const SomethingWentWrong = (props) => {\r\n\r\n    return (\r\n        <div className=\"serviceError\">\r\n            <img src={image} className=\"serviceError__img\" alt=\"Something went wrong!\"></img>\r\n            <p className=\"serviceError__text\">Ooops! Something went wrong!</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Pagination from \"react-pagination-library\";\r\nimport \"react-pagination-library/build/css/index.css\";\r\nimport charactersService from '../../services/dataService';\r\nimport dataService from '../../services/dataService';\r\nimport { CardView } from './CardView';\r\nimport { Loading } from '../partials/Loading';\r\nimport { Bookmark } from './Bookmark';\r\nimport { SomethingWentWrong } from '../partials/SomethingWentWrong';\r\n\r\nexport default class MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            charactersArray: null,\r\n            currentPage: 1,\r\n            bookmarkArray: [],\r\n            showLoading: true,\r\n            error: false\r\n        }\r\n    }\r\n    \r\n    loadCharacters(pageNumber) {\r\n        charactersService.getCharacters(pageNumber)\r\n            .then(characters => {\r\n                this.setState({\r\n                    charactersArray: characters.characters,\r\n                    pagesNumber: characters.pagesNumber,\r\n                    showLoading: false,\r\n                    error: false\r\n                });\r\n                let bookmarkedCharacters = dataService.getBookmarkedCharacters();\r\n                this.setState({\r\n                    bookmarkArray: bookmarkedCharacters\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentPage = JSON.parse(localStorage.getItem(\"currentPage\"));\r\n        if (currentPage) {\r\n            this.loadCharacters(currentPage);\r\n            this.setState({\r\n                currentPage: currentPage\r\n            })\r\n        } else {\r\n            this.loadCharacters();\r\n        }\r\n    }   \r\n\r\n    handleBookmark = (character) => {        \r\n        character.bookmarkState = !character.bookmarkState;\r\n        let bookmarkedCharacters = dataService.getBookmarkedCharacters();\r\n        let removed = false;\r\n\r\n        // remove character from bookmark array\r\n        for (let i = 0; i < bookmarkedCharacters.length; i++) {\r\n            if (character.id === bookmarkedCharacters[i].id) {\r\n                bookmarkedCharacters.splice(i, 1);\r\n                removed = true;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        // add character in bookmark array\r\n        if (!removed) {\r\n            bookmarkedCharacters.push(character);\r\n        }\r\n        localStorage.setItem(\"bookmarkedCharacters\", JSON.stringify(bookmarkedCharacters));\r\n\r\n        // change character bookmark property in state\r\n        let charactersArray = this.state.charactersArray;\r\n        for (let i = 0; i < charactersArray.length; i++) {\r\n            if (character.id === charactersArray[i].id) {\r\n                charactersArray[i].bookmarkState = character.bookmarkState;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            charactersArray: charactersArray,\r\n            bookmarkArray: bookmarkedCharacters\r\n        });\r\n    }\r\n\r\n    changeCurrentPage = pageNum => {\r\n        this.loadCharacters(pageNum);\r\n        this.setState({ currentPage: pageNum, showLoading: true });\r\n        localStorage.setItem(\"currentPage\", JSON.stringify(pageNum));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error ? <SomethingWentWrong /> : (\r\n                        <div className=\"container\">\r\n                            {this.state.showLoading ? <Loading /> : (\r\n                                    <div>\r\n                                        <Bookmark characters={this.state.bookmarkArray} handleBookmark={this.handleBookmark}/>\r\n                                        <div className=\"characters-content\">\r\n                                            {this.state.charactersArray.map((character, i) => {\r\n                                                return (\r\n                                                    <CardView key={i} handleBookmark={this.handleBookmark} character={character} ></CardView>\r\n                                                )\r\n                                            }) }\r\n                                        </div>\r\n                        \r\n                                        <Pagination\r\n                                            currentPage={this.state.currentPage}\r\n                                            totalPages={this.state.pagesNumber}\r\n                                            changeCurrentPage={this.changeCurrentPage}\r\n                                            theme=\"square-fill\"\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport dataService from '../../services/dataService';\r\nimport { Loading } from '../partials/Loading';\r\nimport { SomethingWentWrong } from '../partials/SomethingWentWrong';\r\n\r\nexport default class CharacterDetailsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            character: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    loadCharacter() {\r\n        dataService.getCharaterDetails(this.props.match.params.id)\r\n            .then( character => {\r\n                this.setState({\r\n                    character: character\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    error: true\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCharacter();\r\n    }  \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.error ? <SomethingWentWrong /> :\r\n                    <div className=\"container\">\r\n                        {!this.state.character ? <Loading /> : \r\n                            <div className=\"details\">\r\n                                    <img src={this.state.character.image} alt=\"character\" className=\"details__img\"></img>\r\n                                    <div className=\"details__info\">\r\n                                        <p className=\"details__text\">Name: {this.state.character.name}</p>\r\n                                        <p className=\"details__text\">Gender: {this.state.character.gender}</p>\r\n                                        <p className=\"details__text\">Location: {this.state.character.location}</p>\r\n                                        <p className=\"details__text\">Species: {this.state.character.species}</p>\r\n                                        <p className=\"details__text\">Number of episodes: {this.state.character.episode}</p>\r\n                                    </div>\r\n                            </div>  \r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Header } from './partials/Header';\r\nimport MainPage from './mainPage/MainPage';\r\nimport CharacterDetailsPage from './characterPage/CharacterPage';\r\n\r\nclass AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MainPage} />\r\n            <Route path=\"/character/:id\" component={CharacterDetailsPage} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport AppRouter from './app/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/style.scss';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <AppRouter />\n    </HashRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}